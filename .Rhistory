install.packages(fpp3)
library(fpp3)
install.packages("fpp3")
clear
clc
library(tsibble)
y <- tsibble(Year = 2015:2019 , Observation = c(123, 39, 78, 52, 110), index = Year)
mutate
y
z <- tibble(Month = c('2019 Jan','2019 Feb', '2019 Mar', '2019 Apr', '2019 May'), Observation = c(50, 23, 34, 30, 25))
z
z %>% mutate(Month = yearmonth(Month)) %>% as_tsibble( index = Month )
environmentName(environment(select))
environmentName(environment(mutate}))
environmentName(environment(mutate))
(environment(mutate))
(environment(select))
library(dplyr)
z %>% mutate(Month = yearmonth(Month)) %>% as_tsibble( index = Month )
z
z %>% mutate(Month = yearmonth(Month)) %>% as_tsibble( index = Month )}
z %>% mutate(Month = yearmonth(Month)) %>% as_tsibble( index = Month )
z
z <- %>% mutate(Month = yearmonth(Month)) %>% as_tsibble( index = Month )
z <- z %>% mutate(Month = yearmonth(Month)) %>% as_tsibble( index = Month )
z
olympic_running
library(tsibble)
library(dplyr)
library(fpp3) # Examples
melsyd_economy <- ansett %>%
filter(Airports == "MEL-SYD", Class == "Economy")
melsyd_economy
melsyd_economy %>%
autoplot(Passengers) +
labs(title = "Ansett economy class passengers", subtitle = "Melbourne-Sydney" ) +
xlab("Year")
a10 %>% autoplot(Cost) +
ggtitle("Antidiabetic drug sales") +
ylab("$ Million") + xlab("Year")
# EXAMPLES
PBS %>%
filter(ATC2 == 'A10')  %>%
select(Month, Concession, Type, Cost) %>%
summarise(TotalC = sum(Cost)) %>%
mutate(Cost = TotalC/1e6) -> a10
# Read a CSV and convert it into a TSIBBLE
prison <- readr::read_csv("https://OTexts.com/fpp3/extrafiles/prison_population.csv")
prison <- prison  %>%
mutate(quarter = yearquarter(date)) %>%
select(-date) %>%
as_tsibble(key = c(state, gender, legal, indigenous), index = quarter)
# 2.2 Time plots
melsyd_economy <- ansett %>%
filter(Airports == "MEL-SYD", Class == "Economy")
melsyd_economy %>%
autoplot(Passengers) +
labs(title = "Ansett economy class passengers", subtitle = "Melbourne-Sydney" ) +
xlab("Year")
a10 %>% autoplot(Cost) +
ggtitle("Antidiabetic drug sales") +
ylab("$ Million") + xlab("Year")
install.packages("shiny")
install.packages("EpiEstim")
install.packages("NobBS")
runExample("01_hello")
library(shiny)
runExample("01_hello")
runApp('DATAMINH/Covid19/Dashboards/Test_Shiny01.R')
ui <- fluidPage(
titlePanel("Test Dashboard Covid19"),
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "bins",
label = "Number of bins",
min = 1,
max = 50,
value = 30
),
mainPanel(
plotOutput(outputId = "disPlot")
)
)
)
)
clear
clc
cls
runApp('DATAMINH/Covid19/Dashboards/Test_Shiny01.R')
install.packages("rjson")
datosCovid <- fromJSON(file = "Data\Covid19_Colombia.json")
datosCovid <- fromJSON(file = "\Data\Covid19_Colombia.json")
getwd()
datosCovid <- fromJSON(file = "C:\Users\Leonardo REGINO\Documents\DATAMINH\Covid19\Dashboards\Data\Covid19_Colombia.json")
datosCovid <- fromJSON(file = "C:\Users\Leonardo REGINO\Documents\DATAMINH\Covid19\Dashboards\Data\Covid19_Colombia.json")
setwd("C:\Users\Leonardo REGINO\Documents\DATAMINH\Covid19\Dashboards")
setwd("C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards")
setwd("C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards")
datosCovid <- fromJSON(file = "Data/Covid19_Colombia.json")
datosCovid <- fromJSON(file = "/Data/Covid19_Colombia.json")
library(rjson)
library(shiny)
datosCovid <- fromJSON(file = "/Data/Covid19_Colombia.json")
datosCovid <- fromJSON(file = "Data/Covid19_Colombia.json")
View(datosCovid)
print(result)
print(datosCovid)
datos.path <- "C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards"
datosCovid <- fromJSON(file =  paste(data.path, "Covid19_Colombia.json", sep = "/") )
datos.path <- "C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards/Data"
datosCovid <- fromJSON(file =  paste(data.path, "Covid19_Colombia.json", sep = "/") )
datosCovid <- fromJSON(file =  paste(datos.path, "Covid19_Colombia.json", sep = "/") )
library(rjson)
library(shiny)
datos.path <- "C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards/Data"
datosCovid <- fromJSON(file =  paste(datos.path, "Covid19_Colombia.json", sep = "/") )
print(datosCovid)
View(datosCovid)
### LOAD LIBRARIES ###
library(rjson)
library(shiny)
datos.path <- "C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards/Data"
datosImport <- fromJSON(file =  paste(datos.path, "Covid19_Colombia.json", sep = "/") )
datosCovid <- as.data.frame(datosImport)
View(datosCovid)
View(datosCovid)
View(datosImport)
### LOAD LIBRARIES ###
library(rjson)
library(shiny)
datos.path <- "C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards/Data"
datosImport <- fromJSON(file =  paste(datos.path, "Covid19_Colombia.json", sep = "/") )
datosCovid <- as.data.frame(datosImport)
View(datosImport)
View(datosCovid)
library(rjson)
library(shiny)
datos.path <- "C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards/Data"
datosImport <- fromJSON(file =  paste(datos.path, "Covid19_Colombia.json", sep = "/") )
datosCovid <- as.data.frame(datosImport)
datosImport <- fromJSON(file =  paste(datos.path, "Covid19_Colombia.json", sep = "/") )
datosImport <- fromJSON(file =  paste(datos.path, "Covid19_Colombia.json", sep = "/") )
datosCovid <- as.data.frame(datosImport)
View(datosCovid)
install.packages("RJSONIO")
library(RJSONIO)
mis1 = RJSONIO::fromJSON(datosImport)
mis1 <- fromJSON(datosImport)
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
df <- fromJSON('[{"df.time":"2019-05-14 05:44:28","df.temperature":33.49}]')
View(df)
toJSON(unbox(df))
df <- fromJSON('[{"id_de_caso":"1","fecha_de_notificaci_n":"2020-03-02T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"19","sexo":"F","tipo":"Importado","estado":"Leve","pa_s_de_procedencia":"ITALIA","fis":"2020-02-27T00:00:00.000","fecha_diagnostico":"2020-03-06T00:00:00.000","fecha_recuperado":"2020-03-13T00:00:00.000","fecha_reporte_web":"2020-03-06T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","codigo_pais":"380","pertenencia_etnica":"Otro"}
,{"id_de_caso":"869","fecha_de_notificaci_n":"2020-03-22T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"69","sexo":"M","tipo":"Relacionado","estado":"Leve","fis":"2020-03-17T00:00:00.000","fecha_diagnostico":"2020-03-31T00:00:00.000","fecha_recuperado":"2020-05-06T00:00:00.000","fecha_reporte_web":"2020-03-31T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","pertenencia_etnica":"Otro"}]')
View(df)
misDatos <- "https://www.datos.gov.co/resource/gt2j-8ykr.json"
misd}
misDatos
df <- fromJSON('[{"id_de_caso":"1","fecha_de_notificaci_n":"2020-03-02T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"19","sexo":"F","tipo":"Importado","estado":"Leve","pa_s_de_procedencia":"ITALIA","fis":"2020-02-27T00:00:00.000","fecha_diagnostico":"2020-03-06T00:00:00.000","fecha_recuperado":"2020-03-13T00:00:00.000","fecha_reporte_web":"2020-03-06T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","codigo_pais":"380","pertenencia_etnica":"Otro"}
,{"id_de_caso":"869","fecha_de_notificaci_n":"2020-03-22T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"69","sexo":"M","tipo":"Relacionado","estado":"Leve","fis":"2020-03-17T00:00:00.000","fecha_diagnostico":"2020-03-31T00:00:00.000","fecha_recuperado":"2020-05-06T00:00:00.000","fecha_reporte_web":"2020-03-31T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","pertenencia_etnica":"Otro"}]')
datos.path <- "C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards/Data"
datosImport <- fromJSON(file =  paste(datos.path, "Covid19_Colombia.json", sep = "/") )
library(rjson)
df <- fromJSON('[{"df.time":"2019-05-14 05:44:28","df.temperature":33.49}]')
df <- fromJSON('[{"id_de_caso":"1","fecha_de_notificaci_n":"2020-03-02T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"19","sexo":"F","tipo":"Importado","estado":"Leve","pa_s_de_procedencia":"ITALIA","fis":"2020-02-27T00:00:00.000","fecha_diagnostico":"2020-03-06T00:00:00.000","fecha_recuperado":"2020-03-13T00:00:00.000","fecha_reporte_web":"2020-03-06T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","codigo_pais":"380","pertenencia_etnica":"Otro"}
,{"id_de_caso":"869","fecha_de_notificaci_n":"2020-03-22T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"69","sexo":"M","tipo":"Relacionado","estado":"Leve","fis":"2020-03-17T00:00:00.000","fecha_diagnostico":"2020-03-31T00:00:00.000","fecha_recuperado":"2020-05-06T00:00:00.000","fecha_reporte_web":"2020-03-31T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","pertenencia_etnica":"Otro"}]')
datos.path <- "C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards/Data"
datosImport <- fromJSON(file =  paste(datos.path, "Covid19_Colombia.json", sep = "/") )
View(datosImport)
View(datosImport)
View(datosImport)
View(df)
View(df)
View(df)
View(df)
df <- fromJSON('[{"id_de_caso":"1","fecha_de_notificaci_n":"2020-03-02T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"19","sexo":"F","tipo":"Importado","estado":"Leve","pa_s_de_procedencia":"ITALIA","fis":"2020-02-27T00:00:00.000","fecha_diagnostico":"2020-03-06T00:00:00.000","fecha_recuperado":"2020-03-13T00:00:00.000","fecha_reporte_web":"2020-03-06T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","codigo_pais":"380","pertenencia_etnica":"Otro"}
,{"id_de_caso":"869","fecha_de_notificaci_n":"2020-03-22T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"69","sexo":"M","tipo":"Relacionado","estado":"Leve","fis":"2020-03-17T00:00:00.000","fecha_diagnostico":"2020-03-31T00:00:00.000","fecha_recuperado":"2020-05-06T00:00:00.000","fecha_reporte_web":"2020-03-31T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","pertenencia_etnica":"Otro"}]')
View(df)
#library(RJSONIO)
library(jsonlite)
df <- fromJSON('[{"df.time":"2019-05-14 05:44:28","df.temperature":33.49}]')
toJSON(unbox(df))
df <- fromJSON('[{"id_de_caso":"1","fecha_de_notificaci_n":"2020-03-02T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"19","sexo":"F","tipo":"Importado","estado":"Leve","pa_s_de_procedencia":"ITALIA","fis":"2020-02-27T00:00:00.000","fecha_diagnostico":"2020-03-06T00:00:00.000","fecha_recuperado":"2020-03-13T00:00:00.000","fecha_reporte_web":"2020-03-06T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","codigo_pais":"380","pertenencia_etnica":"Otro"}
,{"id_de_caso":"869","fecha_de_notificaci_n":"2020-03-22T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"69","sexo":"M","tipo":"Relacionado","estado":"Leve","fis":"2020-03-17T00:00:00.000","fecha_diagnostico":"2020-03-31T00:00:00.000","fecha_recuperado":"2020-05-06T00:00:00.000","fecha_reporte_web":"2020-03-31T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","pertenencia_etnica":"Otro"}]')
View(df)
#library(RJSONIO)
library(jsonlite)
df <- fromJSON('[{"df.time":"2019-05-14 05:44:28","df.temperature":33.49}]')
View(df)
df <- fromJSON('[{"id_de_caso":"1","fecha_de_notificaci_n":"2020-03-02T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"19","sexo":"F","tipo":"Importado","estado":"Leve","pa_s_de_procedencia":"ITALIA","fis":"2020-02-27T00:00:00.000","fecha_diagnostico":"2020-03-06T00:00:00.000","fecha_recuperado":"2020-03-13T00:00:00.000","fecha_reporte_web":"2020-03-06T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","codigo_pais":"380","pertenencia_etnica":"Otro"}
,{"id_de_caso":"869","fecha_de_notificaci_n":"2020-03-22T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"69","sexo":"M","tipo":"Relacionado","estado":"Leve","fis":"2020-03-17T00:00:00.000","fecha_diagnostico":"2020-03-31T00:00:00.000","fecha_recuperado":"2020-05-06T00:00:00.000","fecha_reporte_web":"2020-03-31T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","pertenencia_etnica":"Otro"}]')
library(RJSONIO)
df <- fromJSON('[{"df.time":"2019-05-14 05:44:28","df.temperature":33.49}]')
View(df)
#library(RJSONIO)
library(jsonlite)
df <- fromJSON('[{"df.time":"2019-05-14 05:44:28","df.temperature":33.49}]')
View(df)
df <- fromJSON('[{"id_de_caso":"1","fecha_de_notificaci_n":"2020-03-02T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"19","sexo":"F","tipo":"Importado","estado":"Leve","pa_s_de_procedencia":"ITALIA","fis":"2020-02-27T00:00:00.000","fecha_diagnostico":"2020-03-06T00:00:00.000","fecha_recuperado":"2020-03-13T00:00:00.000","fecha_reporte_web":"2020-03-06T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","codigo_pais":"380","pertenencia_etnica":"Otro"}
,{"id_de_caso":"869","fecha_de_notificaci_n":"2020-03-22T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"69","sexo":"M","tipo":"Relacionado","estado":"Leve","fis":"2020-03-17T00:00:00.000","fecha_diagnostico":"2020-03-31T00:00:00.000","fecha_recuperado":"2020-05-06T00:00:00.000","fecha_reporte_web":"2020-03-31T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","pertenencia_etnica":"Otro"}]')
View(df)
datos.path <- "C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards/Data"
datosImport <- fromJSON(file =  paste(datos.path, "Covid19_Colombia.json", sep = "/") )
datosImport <- fromJSON(txt = paste(datos.path, "Covid19_Colombia.json", sep = "/") )
datosImport <- fromJSON(txt = paste(datos.path, "Covid19_Colombia.json", sep = "/") )
View(datosImport)
### LOAD LIBRARIES ###
#library(rjson)
library(shiny)
#library(RJSONIO)
library(jsonlite)
df <- fromJSON('[{"df.time":"2019-05-14 05:44:28","df.temperature":33.49}]')
df <- fromJSON('[{"id_de_caso":"1","fecha_de_notificaci_n":"2020-03-02T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"19","sexo":"F","tipo":"Importado","estado":"Leve","pa_s_de_procedencia":"ITALIA","fis":"2020-02-27T00:00:00.000","fecha_diagnostico":"2020-03-06T00:00:00.000","fecha_recuperado":"2020-03-13T00:00:00.000","fecha_reporte_web":"2020-03-06T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","codigo_pais":"380","pertenencia_etnica":"Otro"}
,{"id_de_caso":"869","fecha_de_notificaci_n":"2020-03-22T00:00:00.000","c_digo_divipola":"11001","ciudad_de_ubicaci_n":"Bogotá D.C.","departamento":"Bogotá D.C.","atenci_n":"Recuperado","edad":"69","sexo":"M","tipo":"Relacionado","estado":"Leve","fis":"2020-03-17T00:00:00.000","fecha_diagnostico":"2020-03-31T00:00:00.000","fecha_recuperado":"2020-05-06T00:00:00.000","fecha_reporte_web":"2020-03-31T00:00:00.000","tipo_recuperaci_n":"PCR","codigo_departamento":"11","pertenencia_etnica":"Otro"}]')
datos.path <- "C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards/Data"
datosImport <- fromJSON(txt = paste(datos.path, "Covid19_Colombia.json", sep = "/") )
View(datosImport)
class(datosImport)
### LOAD LIBRARIES ###
library(shiny)
library(jsonlite)
datos.path <- "C:/Users/Leonardo REGINO/Documents/DATAMINH/Covid19/Dashboards/Data"
datosImport <- fromJSON(txt = paste(datos.path, "Covid19_Colombia.json", sep = "/") )
View(datosImport)
runApp('Test_Shiny01.R')
runApp('Test_Shiny01.R')
runApp('Test_Shiny01.R')
runApp('Test_Shiny01.R')
ui <- fluidPage(
titlePanel("Test Dashboard Covid19"),
sidebarLayout(
sidebarPanel(
selectInput("City", "Ciudad:", c("1" = "A")),
sliderInput(inputId = "bins",
label = "Number of bins",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput(outputId = "disPlot")
)
)
)
runApp('Test_Shiny01.R')
ui <- fluidPage(
titlePanel("Test Dashboard Covid19"),
sidebarLayout(
sidebarPanel(
selectInput("City", "City:", c("Bogotá" = "1")),
sliderInput(inputId = "bins",
label = "Number of bins",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput(outputId = "disPlot")
)
)
)
runApp('Test_Shiny01.R')
runApp('Test_Shiny01.R')
runApp('Test_Shiny01.R')
mtcars
a <- mtcars
View(a)
View(datosImport)
datosImport$ciudad_de_ubicaci_n
levels(datosImport$ciudad_de_ubicaci_n)
levels(factor(datosImport$ciudad_de_ubicaci_n))
Cities <- levels(factor(datosImport$ciudad_de_ubicaci_n))
unique(datosImport$ciudad_de_ubicaci_n)
a<- unique(datosImport$ciudad_de_ubicaci_n)
remove(a)
Cities <- unique(datosImport$ciudad_de_ubicaci_n)
runApp('Test_Shiny01.R')
class(mtcars)
runApp('Test_Shiny01.R')
levels(datosImport$ciudad_de_ubicaci_n)
levels(factor(datosImport$ciudad_de_ubicaci_n))
runApp('Test_Shiny01.R')
runApp('Test_Shiny01.R')
ui <- fluidPage(
titlePanel("Evolution of R0 - Covid19"),
sidebarLayout(
sidebarPanel(
selectizeInput('City', 'Select a City', choices = c("Choose a city" = "", levels(factor(datosImport$ciudad_de_ubicaci_n) ) ) ),
sliderInput(inputId = "bins",
label = "Number of bins",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput(outputId = "disPlot")
)
)
)
runApp('Test_Shiny01.R')
install.packages("tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(shiny); runApp('Test_Shiny01.R')
runApp('Test_Shiny01.R')
runApp('Test_Shiny01.R')
runApp('Test_Shiny01.R')
class(datosImport$fecha_diagnostico)
class(as.Date(datosImport$fecha_diagnostico))
min(as.Date(datosImport$fecha_diagnostico))
max(as.Date(datosImport$fecha_diagnostico))
max(as.Date(datosImport$fecha_de_notificaci_n))
min(as.Date(datosImport$fecha_de_notificaci_n))
runApp('Test_Shiny01.R')
runApp('Test_Shiny01.R')
max(datosImport$fecha_de_notificaci_n)
max(datosImport$fecha_de_muerte)
(datosImport$fecha_de_muerte)
(datosImport$fecha_de_muerte)
(datosImport$fecha_reporte_web)
max(datosImport$fecha_reporte_web)
min(datosImport$fecha_reporte_web)
runApp('Test_Shiny01.R')
library(shiny); runApp('Dashboard_Covid19.R')
